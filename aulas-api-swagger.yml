swagger: "2.0"
info:
  description: "Essa documentação tem como objetivo apresentar os contratos do microserviço da entidade \"Aulas\" como parte da avaliação da disciplina de Construção de Software. "
  version: "1.0.0"
  title: "Swagger Aulas - Microserviços PUCRS"
  contact:
    email: "eduardo.arruda@pucrs.br"
host: "petstore.swagger.io"
basePath: "/v1"
tags:
- name: "aulas"
  description: "Retorna as aulas de todas as turmas de disciplinas correntes"
  externalDocs:
    description: "Find out more"
    url: "http://swagger.io"
schemes:
- "http"
paths:
  /aulas:
    post:
      tags:
      - "aulas"
      summary: "Adiciona uma nova aula"
      description: ""
      operationId: "addAula"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Objeto aula que precisa ser enviado para adicionar uma nova aula"
        required: true
        schema:
          $ref: "#/definitions/Aula"
      responses:
        "405":
          description: "Invalid input"
    put:
      tags:
      - "aulas"
      summary: "Atualiza uma aula"
      description: ""
      operationId: "updateAula"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Objeto de atualização de uma turma"
        required: true
        schema:
          $ref: "#/definitions/Aula"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Aula not found"
        "405":
          description: "Validation exception"
      
  /aulas/turma:
    get:
      tags:
      - "aulas"
      summary: "Retorna aulas de uma turma"
      description: "Multiple status values can be provided with comma separated strings"
      operationId: "findAulasByTurma"
      produces:
      - "application/json"
      parameters:
      - name: "status"
        in: "query"
        description: "Status values that need to be considered for filter"
        required: true
        type: "array"
        items:
          type: "string"
          enum:
          - "available"
          - "pending"
          - "sold"
          default: "available"
        collectionFormat: "multi"
      responses:
        "200":
          description: "successful operation"
          
        "400":
          description: "Invalid status value"

  /aulas/disciplinas:
    get:
      tags:
      - "aulas"
      summary: "Retorna todas as aulas de uma disciplina"
      description: "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing."
      operationId: "findAulasByDisciplina"
      produces:
      - "application/json"
      parameters:
      - name: "tags"
        in: "query"
        description: "Tags to filter by"
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "string"
        "400":
          description: "Invalid tag value"
          
  /aulas/data:
    get:
      tags:
      - "aulas"
      summary: "Retornar aulas de todas as disciplinas por um intervalo de tempo"
      description: "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing."
      produces:
      - "application/json"
      parameters:
      - name: "tags"
        in: "query"
        description: "Tags to filter by"
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "string"
        "400":
          description: "Invalid tag value"
  
definitions:
  Aula:
    type: "object"
    required:
    - "name"
    - "photoUrls"
    properties:
      id:
        type: "integer"
        format: "int64"
      id_sala:
        type: "string"
        example: "17e9f24d-4cbd-4892-82cf-dccc3b0d616a"
      id_disciplina:
        type: "string"
        example: "5fbf26b4-2687-4e35-b09f-b7b1b2fbdd27"
      conteudo:
        type: "string"
        example: "Swagger, APIs e implementação com frameworks. Frameworks: Angular e Spring"
      turma:
        type: "string"
        example: "127"
      data:
        type: "string"
        example: "2020-09-30"
      tags:
        type: "array"
        items:
          type: "string"
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
